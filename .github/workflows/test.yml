name: Make release
on:
  push:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: C
        run: touch CCCC
      - name: D
        run: touch DDDD
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }} Build
          path: |
            *

            
  release:
     matrix:
       os: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.os }}"
          path: "./binary/"

      - name: Display structure of downloaded files
        run: ls -R

# if: ${{ github.event.workflow_run.conclusion == 'success' }}
        
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1.0.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false


      # - name: Attach the artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      #   with:
      #     upload_url: ${{ needs.job2.outputs.the_upload_url }}
      #     asset_path: "./binaryset/${{ steps.step_filename.outputs.the_asset_name }}"
      #     asset_name: "${{ steps.step_filename.outputs.the_asset_name }}"
      #     asset_content_type: application/octet-stream

# on:
#   workflow_run:
#     workflows: ["Build executable"]
#     types: [completed]

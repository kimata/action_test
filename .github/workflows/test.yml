name: Make release
on:
  push:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.5.1

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false

      - name: Poetry Install Dependencies
        run: |
          poetry install --no-interaction

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: app/amazhist.py
          include-package-data: selenium

          product-name: amazhist
          file-version: 0.1.0
          product-version: 0.1.0

          standalone: true
          onefile: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*


  release:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.os }} Build"
          path: "./binary/"

      - name: Display structure of downloaded files
        run: ls -R


        
# if: ${{ github.event.workflow_run.conclusion == 'success' }}
        
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1.0.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false


      # - name: Attach the artifact
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      #   with:
      #     upload_url: ${{ needs.job2.outputs.the_upload_url }}
      #     asset_path: "./binaryset/${{ steps.step_filename.outputs.the_asset_name }}"
      #     asset_name: "${{ steps.step_filename.outputs.the_asset_name }}"
      #     asset_content_type: application/octet-stream

# on:
#   workflow_run:
#     workflows: ["Build executable"]
#     types: [completed]
